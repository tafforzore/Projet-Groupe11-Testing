name: Node.js CI/CD with Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password
        options: >-
          --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: npm install
    - run: npx playwright install
    - run: npm install --save-dev supertest
    - run: npm run build --if-present

    - name: Create .env file
      run: |
        cat <<EOF > .env
        MONGO_URL=${{ secrets.MONGO_URL }}
        JWT_SECRET=${{ secrets.JWT_SECRET }}
        JWT_EXPIRES_IN=15m
        JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}
        JWT_REFRESH_EXPIRES_IN=7d
        baseURL=http://localhost:3000
        EOF

    - name: Run tests Jest
      env:
        MONGO_URL: ${{ secrets.MONGO_URL_lOCAL }}
        NODE_ENV: test
        MONGOMS_DISABLE_DOWNLOAD: true
      run: npm run test --if-present

    - name: Run tests playwright
      run: npx playwright test 

    - name: Build container
      run: docker-compose build

    # - name: Start container
    #   run: docker-compose up -d

    - name: Deploy
      if: github.ref == 'refs/heads/main'
      env:
        deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
      run: |
        curl "$deploy_url"