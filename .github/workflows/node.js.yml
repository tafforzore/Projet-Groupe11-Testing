name: Node.js CI/CD with Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:5.0
        ports:
          - 27017:27017
        env:
          MONGO_INITDB_ROOT_USERNAME: admin
          MONGO_INITDB_ROOT_PASSWORD: password
        options: >-
          --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        node-version: [22.x]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run unit tests
      env:
        MONGO_URL: mongodb://admin:password@localhost:27017/test?authSource=admin
        NODE_ENV: test
      run: npm test -- --ci --coverage

    - name: Run integration tests
      env:
        MONGO_URL: mongodb://admin:password@localhost:27017/test?authSource=admin
        NODE_ENV: test
      run: npm run test:integration

    - name: Build Docker containers
      run: docker-compose build

    - name: Start services
      run: docker-compose up -d

    - name: Run API tests
      run: |
        sleep 10 # Attendre que l'API soit prÃªte
        npm run test:api